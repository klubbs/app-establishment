name: 🚀 PRODUCTION (IOS) - Build | Publish Store

on:
  workflow_dispatch:
jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          expo-token: ${{ secrets.EXPO_TOKEN }}

      - name: 🏗 Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 📦 Install dependencies
        run: yarn install

      # - if: github.event.inputs.deploy == 'P'
      #   name: Publish Version
      #   env:
      #     ENVIRONMENT_KLUBBS_API_URL: ${{secrets.ENVIRONMENT_KLUBBS_API_URL }}
      #     ENVIRONMENT_KLUBBS_AUTHZN_URL: ${{secrets.ENVIRONMENT_KLUBBS_AUTHZN_URL }}
      #     ENVIRONMENT_PLACES_API: ${{secrets.ENVIRONMENT_PLACES_API}}
      #   run: |
      #       echo "Publicar versão canal -> production-${GITHUB_REF##*/}"
      #       expo publish --release-channel production-${GITHUB_REF##*/} --non-interactive

      - name: 🚀 Build Version
        env:
          ENVIRONMENT_KLUBBS_API_URL: ${{ secrets.ENVIRONMENT_KLUBBS_API_URL }}
          ENVIRONMENT_KLUBBS_AUTHZN_URL: ${{ secrets.ENVIRONMENT_KLUBBS_AUTHZN_URL }}
          ENVIRONMENT_PLACES_API: ${{ secrets.ENVIRONMENT_PLACES_API }}
        run: |
            echo "----- BUILD -----"
            expo build:ios --release-channel production-${GITHUB_REF##*/} --non-interactive
            echo "----- DOWNLOAD IPA -----"
            curl -o app.ipa "$(expo url:ipa --non-interactive)"

      - name: 📦 Upload do artefato
        uses: actions/upload-artifact@v2
        with:
         name: appbuild
         path: ./app.ipa

  Transport_Apple_Store_Connect:
    needs: Build
    runs-on:  macos-latest
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: appbuild

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download S3 file to publish in Apple Store
        run: |
          aws s3 cp s3://klubbs-devops/ios/fastlane-key-ios.json fastlane-key-ios.json

      - name: Fastlane - Install
        run: |
          brew install fastlane
          fastlane update_fastlane

      - name: Fastlane - Transport
        run: fastlane deliver --verbose --ipa "app.ipa" --skip_screenshots --skip_metadata --precheck_include_in_app_purchases false --api_key_path ./fastlane-key-ios.json

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: appbuild
